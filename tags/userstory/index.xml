<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>userstory on Anver Bogatov</title><link>/tags/userstory/</link><description>Recent content in userstory on Anver Bogatov</description><generator>Hugo -- gohugo.io</generator><language>ru-RU</language><lastBuildDate>Mon, 25 Oct 2021 19:59:56 +0400</lastBuildDate><atom:link href="/tags/userstory/index.xml" rel="self" type="application/rss+xml"/><item><title>User Story Mapping или Карты Пользовательских Сценариев</title><link>/posts/user-story-mapping/</link><pubDate>Mon, 25 Oct 2021 19:59:56 +0400</pubDate><guid>/posts/user-story-mapping/</guid><description>Что такое User Story Mapping? User Story Mapping или КАРТЫ ПОЛЬЗОВАТЕЛЬСКИХ ИСТОРИЙ - это способ визуального планирования и приоритизации задач. Способ хорош тем, что заставляет нас думать о своих software решениях с позиции ПОЛЬЗОВАТЕЛЬСКИХ ИСТОРИЙ (User Story).
Прежде чем мы перейдём к знакомству с методом, важно разобраться с тем, а что такое вообще ПОЛЬЗОВАТЕЛЬСКАЯ ИСТОРИЯ.
Что такое User Story? ПОЛЬЗОВАТЕЛЬСКАЯ ИСТОРИЯ - это описание какой-либо фичи продукта, рассказанное с точки зрения её пользователя.</description><content>&lt;h3 id="что-такое-user-story-mapping">Что такое User Story Mapping?&lt;/h3>
&lt;p>User Story Mapping или &lt;strong>КАРТЫ ПОЛЬЗОВАТЕЛЬСКИХ ИСТОРИЙ&lt;/strong> - это способ визуального планирования и приоритизации задач. Способ хорош тем, что заставляет нас думать о своих software решениях с позиции &lt;strong>ПОЛЬЗОВАТЕЛЬСКИХ ИСТОРИЙ&lt;/strong> (User Story).&lt;/p>
&lt;p>Прежде чем мы перейдём к знакомству с методом, важно разобраться с тем, а что такое вообще &lt;strong>ПОЛЬЗОВАТЕЛЬСКАЯ ИСТОРИЯ&lt;/strong>.&lt;/p>
&lt;h3 id="что-такое-user-story">Что такое User Story?&lt;/h3>
&lt;p>&lt;strong>ПОЛЬЗОВАТЕЛЬСКАЯ ИСТОРИЯ&lt;/strong> - это описание какой-либо фичи продукта, рассказанное с точки зрения её пользователя. Буквально рассказ о том, как именно фича используется конкретным пользователем. &lt;strong>ПОЛЬЗОВАТЕЛЬСКИЕ ИСТОРИИ&lt;/strong> при описании функционала software продукта, ставят во главу угла именно пользователя.&lt;/p>
&lt;p>При написании &lt;strong>ПОЛЬЗОВАТЕЛЬСКИХ ИСТОРИЙ&lt;/strong> зачастую используется следующая схема:&lt;/p>
&lt;pre>&lt;code>As a [type of user],
I want [some particular feature],
So that [some benefit] is received.
&lt;/code>&lt;/pre>&lt;p>На русском, эта схема будет выглядеть следующим образом:&lt;/p>
&lt;pre>&lt;code>Как [тип пользователя],
Я хочу [описание какого-то действия],
Чтобы [описание цели].
&lt;/code>&lt;/pre>&lt;p>При составлении &lt;strong>ПОЛЬЗОВАТЕЛЬСКИХ ИСТОРИЙ&lt;/strong> важно понимать какой уровень детализации Вам необходим. Например, следующая история это плохой пример:&lt;/p>
&lt;pre>&lt;code>Как клиент онлайн магазина,
Я хочу купить товар,
Чтобы им пользоваться.
&lt;/code>&lt;/pre>&lt;p>Почему это пример плох? Давайте закроем глаза на то, что пример взял из головы и описание цели странноватое. Главная проблема этого примера в том, что «хочу купить товар» это слишком большое действие, чтобы описывать его одной историей. «Купить товар» обычно подразумевает:&lt;/p>
&lt;ul>
&lt;li>открыть сайт онлайн магазина&lt;/li>
&lt;li>найти нужный товар&lt;/li>
&lt;li>просмотреть его характеристики&lt;/li>
&lt;li>прочитать отзывы на него&lt;/li>
&lt;li>добавить его в корзину&lt;/li>
&lt;li>залогиниться для сохранения истории покупок&lt;/li>
&lt;li>ввести данные банковской карты&lt;/li>
&lt;li>оплатить&lt;/li>
&lt;/ul>
&lt;p>Почему важно подобрать удобный уровень детализации &lt;strong>ПОЛЬЗОВАТЕЛЬСКОЙ ИСТОРИИ&lt;/strong>? Потому что основная польза метода &lt;strong>КАРТА ПОЛЬЗОВАТЕЛЬСКИХ ИСТОРИЙ&lt;/strong> заключается в планировании доставки функционала небольшими частями. Это позволяет от одного небольшого релиза к другому, этакими частыми шажками, придти к конечной цели пользователя, реализованной в виде software решения.&lt;/p>
&lt;p>Огромные истории крайне трудно планировать, поскольку, из-за своего размера они сразу займут много времени и частичную их доставку запланировать будет проблематично. Поэтому хорошей практикой будет разбивать большие задачи, на отдельные истории. Выше я уже привёл список действий, которые входят в состав действия «Купить товар». Каждое их этих мелких действий будет отдельной историей.&lt;/p>
&lt;h3 id="как-выглядит-user-story-mapping">Как выглядит User Story Mapping?&lt;/h3>
&lt;p>Итак, теперь, когда мы разобрались с тем, что такое &lt;strong>ПОЛЬЗОВАТЕЛЬСКИЕ ИСТОРИИ&lt;/strong>, самое время разобраться с методологией, которая их активно использует.&lt;/p>
&lt;p>Итак, попробуем составить свою &lt;strong>КАРТУ ПОЛЬЗОВАТЕЛЬСКИХ ИСТОРИЙ&lt;/strong>. И для этого, в первую очередь нужно понять какую именно фичу мы будем моделировать. Раз уж мы заговорили про покупку товара в онлайн магазине, давайте продолжим этот пример.&lt;/p>
&lt;p>&lt;strong>КАРТА ПОЛЬЗОВАТЕЛЬСКИХ ИСТОРИЙ&lt;/strong>, это метод визуального моделирования и планирования, поэтому для визуализации моей истории, я буду использовать сервис Miro (&lt;a href="https://miro.com">Online Whiteboard &amp;amp; Visual Collaboration Platform | Miro&lt;/a>).&lt;/p>
&lt;p>История состоит из нескольких шагов, выполняемых пользователем в определённой последовательности. Поэтому на нашу электронную доску, первым делом мы добавим нашего пользователя.&lt;/p>
&lt;p>&lt;img src="/images/user-story-mapping/1.png" alt="user-story-mapping-user">&lt;/p>
&lt;p>Для чего это нужно? Как уже было сказано выше, &lt;strong>ПОЛЬЗОВАТЕЛЬСКИЕ ИСТОРИИ&lt;/strong> - это ориентированный на пользователя (user-centric) подход. Поэтому при моделировании историй, нужно всегда держать в голове от лица кого эта история
рассказывается.&lt;/p>
&lt;h4 id="каркас">Каркас&lt;/h4>
&lt;p>Далее, для того чтобы наша история стала похожа на осмысленный нарратив, нам нужно рассказать что и в какой последовательности делает наш пользователь. Для этого, основные действия в истории пользователя мы добавим в виде отдельных стикеров и расположим их в порядке их выполнения, слева-направо.&lt;/p>
&lt;p>&lt;img src="/images/user-story-mapping/2.png" alt="user-story-mapping-backbone">&lt;/p>
&lt;p>У нас получился список мелких целей, которые пользователь пытается достичь на каждом этапе. Если мы попытаемся рассказать историю, нарратив, используя эти карточки в качестве подсказок, то у нас это легко получиться. Это будет история про то, как Клиент онлайн магазина заказывает товар. В этом и есть &lt;strong>ПОЛЬЗОВАТЕЛЬСКОЙ ИСТОРИИ&lt;/strong>. Однако, &lt;strong>КАРТА ПОЛЬЗОВАТЕЛЬСКИХ ИСТОРИЙ&lt;/strong> на этом не заканчивается.&lt;/p>
&lt;p>То, что мы только что сделали, этот набор стикеров, из которых состоит наша история, называется &lt;strong>КАРКАС&lt;/strong> (или Backbone, в зарубежной литературе). Именно он является основой &lt;strong>ПОЛЬЗОВАТЕЛЬСКОЙ ИСТОРИИ&lt;/strong>, и именно на него мы будем наслаивать остальные элементы, а именно генерировать мелкие истории в формате задач, а так же выделять части чего-то единого.&lt;/p>
&lt;p>Следующим шагом, давайте посмотрим на оранжевые стикеры. Несмотря на то, что каждый из них описывает свой уникальный шаг пользователя на пути к конечной цели, есть в них и общие элементы. Например, «Ввести данные банковской карты» и «Произвести оплату заказа» относятся к более крупному действию, а именно - «Оплата товара».&lt;/p>
&lt;p>Ещё один нюанс, о котором я сразу хочу упомянуть - &lt;strong>КАРТА ПОЛЬЗОВАТЕЛЬСКИХ ИСТОРИЙ&lt;/strong> должен являться живым документом. Его содержимое должно обсуждаться, меняться и поддерживаться в актуальном состоянии. Это абсолютно нормально, работать над ним итеративно, меняя его содержимое и порядок операций для того, чтобы отразить видение того, как именно должен пройти путь пользователя через наше software решение, прежде, чем он достигнет конечного результата.&lt;/p>
&lt;p>Итак, после очередной итерации, наша карта стала выглядеть следующим образом:&lt;/p>
&lt;p>&lt;img src="/images/user-story-mapping/3.png" alt="user-story-mapping-iteration">&lt;/p>
&lt;p>Внимательный читатель заметит, что на карте появились голубые стикеры, которые отображают более общие шаги и называются &lt;strong>АКТИВНОСТЯМИ&lt;/strong>, а так же, поменялся порядок некоторых оранжевых стикеров.&lt;/p>
&lt;p>Но и это ещё не всё. Пока мы просто организуем наше представление о действиях пользователя. Мы прописываем саму историю. Однако, поскольку &lt;strong>КАРТЫ ПОЛЬЗОВАТЕЛЬСКИХ ИСТОРИЙ&lt;/strong> является ещё и инструментом планирования задач, самое время про это и поговорить.&lt;/p>
&lt;h4 id="задачи">Задачи&lt;/h4>
&lt;p>Каждый из оранжевых стикеров описывает большой шаг на пути к конечной цели. Более того, каждый из них может содержать в себе несколько под-шагов или даже различных вариантов одного и того же действия.&lt;/p>
&lt;p>Эти под-шаги или варианты, в данном методе называются &lt;strong>ЗАДАЧАМИ&lt;/strong> и отображаются в вертикальной оси, снизу от &lt;strong>КАРКАСА&lt;/strong>, с помощью стикеров другого цвета.&lt;/p>
&lt;p>Каждая &lt;strong>ЗАДАЧА&lt;/strong> относится к своему элементу &lt;strong>КАРКАСА&lt;/strong>, и описывает какое-то небольшое действие, целью которого является как раз таки, элемент &lt;strong>КАРКАСА&lt;/strong>. Если совсем просто, стикеры с задачами, размещаются под оранжевыми стикерами, к которым они имеют отношение. Каждый из стикеров-задач, является &lt;strong>ПОЛЬЗОВАТЕЛЬСКОЙ ИСТОРИЕЙ&lt;/strong>, которая может быть передана разработчику.&lt;/p>
&lt;p>В случае с моей картой, стикеры-задачи могут выглядеть так:&lt;/p>
&lt;p>&lt;img src="/images/user-story-mapping/4.png" alt="user-story-mapping-task">&lt;/p>
&lt;p>Есть один простой трюк, который поможет описывать задачи так, чтобы:&lt;/p>
&lt;ul>
&lt;li>все они имели схожую смысловую структуру&lt;/li>
&lt;li>и, чтобы все участники моделирования, предельно точно понимали что и зачем нужно делать.
Именно из &lt;strong>ЗАДАЧ&lt;/strong>, в последствии будут созданы тикеты для разработчика.&lt;/li>
&lt;/ul>
&lt;p>Итак, трюк следующий - помните схему, по которой составляются &lt;strong>ПОЛЬЗОВАТЕЛЬСКИЕ ИСТОРИИ&lt;/strong>:
&lt;code>As a [user], I want [something], So that [achieve some benefit]&lt;/code>
А теперь немного изменим её, заменив общие термины на элементы карты:&lt;/p>
&lt;pre>&lt;code>As a [user],
I want [task],
So that [backbone element]
&lt;/code>&lt;/pre>&lt;p>Моя схема написана на русском, так что, давайте, следуя этой схеме, попробуем составить несколько историй для разработчика:&lt;/p>
&lt;pre>&lt;code>1) Как клиент онлайн магазина, Я хочу использовать строку поиска, Чтобы найти нужный товар
2) Как клиент онлайн магазина, Я хочу использовать номер телефона, Чтобы залогиниться в системе
3) Как клиент онлайн магазина, Я хочу просмотреть описание товара, Чтобы посмотреть информацию о товаре
&lt;/code>&lt;/pre>&lt;p>Каждая из &lt;strong>ЗАДАЧ&lt;/strong>, в подобном написании, представляет из себя &lt;strong>ПОЛЬЗОВАТЕЛЬСКУЮ ИСТОРИЮ&lt;/strong>. В таком случае, каждый из оранжевых стикеров - представляет из себя Epic (то есть, большую задачу, которая состоит из ряда историй). Если уж совсем точно, то - оранжевые тикеты, это Epic’и в JIRA, тикеты-задачи - это User Story в JIRA. Каждая из User Story в JIRA, затем может быть разбита на несколько тикетов, в рамках которых разработчик реализует те или иные части фичи.&lt;/p>
&lt;h4 id="планирование">Планирование&lt;/h4>
&lt;p>Пришло время поговорить о последнем элементе &lt;strong>КАРТЫ ПОЛЬЗОВАТЕЛЬСКИХ ИСТОРИЙ&lt;/strong>, а именно о планировании.&lt;/p>
&lt;p>Если горизонтальная плоскость отображает шкалу времени, то вертикальная в данном методе, отображает приоритет. Чем выше &lt;strong>ЗАДАЧА&lt;/strong> в колонке, тем выше и её приоритет и, соответсвенно, она быстрее будет выполнена разработчиком.&lt;/p>
&lt;p>Есть два способа планирования в данном методе. Блок с &lt;strong>ЗАДАЧАМИ&lt;/strong> может быть поделён, с помощью горизонтальных линий на:&lt;/p>
&lt;ul>
&lt;li>важность или&lt;/li>
&lt;li>релизы&lt;/li>
&lt;/ul>
&lt;p>В случае с важностью, обычно используют три уровня: Must, Should, Could. Первый означает первоочерёдную ценность задач и означает, что они обязаны быть выполнены. Второй - что задачи важны и хорошо бы их выполнить. Третий - необязательны и могут быть не выполнены. Пример деления по важности выглядит следующим образом:&lt;/p>
&lt;p>&lt;img src="/images/user-story-mapping/5.png" alt="user-story-mapping-important">&lt;/p>
&lt;p>Как можно увидеть на скриншоте выше, мы просто разделили набор &lt;strong>ЗАДАЧ&lt;/strong> на блоки, относительно их важности.&lt;/p>
&lt;p>Второй способ, вместо важности - разделение на релизы. Выглядит следующим образом:&lt;/p>
&lt;p>&lt;img src="/images/user-story-mapping/6.png" alt="user-story-mapping-releases">&lt;/p>
&lt;p>Как можно заметить, выглядит это примерно так же, как и вариант выше, однако, насчёт привязки к номеру версии software решения, мы можем планировать &lt;strong>ПОЛЬЗОВАТЕЛЬСКИЕ ИСТОРИИ&lt;/strong> к выпуску в определённых версиях нашего софта.&lt;/p>
&lt;h3 id="процесс-моделирования">Процесс моделирования&lt;/h3>
&lt;p>В заключение, расскажу о том как, по мнению автора методологии, должен проходить процесс моделирования карт.&lt;/p>
&lt;p>Прежде всего, подобные карты создаются не одним человеком, а группой людей, включающей себя бизнес-ориентированных людей (Product Owner’а например), заинтересованных в фиче людей и разработчиков. Моделирование карты происходит в формате воркшопа, то есть - живого общения с обсуждениями и разноцветными стикерами на флипчартах и стенах.&lt;/p>
&lt;p>Основных шагов в ходе воркшопа пять:&lt;/p>
&lt;ol>
&lt;li>Определение скоупа. На данном этапе все участники сессии моделирования карты должны иметь единое понимание того, о чём будет идти речь. Пользователи и фичи, для которых будет производиться моделирование, должны быть оговорены заранее.&lt;/li>
&lt;li>Создание большой картины. На этом этапе накидываются основные идеи о составе истории. Происходит первоначальное создание каркаса фичи.&lt;/li>
&lt;li>Детализация. На данном этапе через коллективное обсуждение элементы каркаса разбиваются на более мелкие задачи. Пересматриваются элементы каркаса, меняются местами, добавляются новые, удаляются ненужные, выделяются активности.&lt;/li>
&lt;li>Разделение на релизы. На этом этапе задачи группируются на релизы. Каждый релиз фактически представляет из себя небольшой MVP. Каждый релиз должен иметь описание ценности, которую он доставит и описание метрик, с помощью которых можно будет замерить достижение цели релиза.&lt;/li>
&lt;li>Стратегия разработки и релизов. На этом этапе уже планируются задачи в разработку. Если нужно, карта актуализируется ещё. Цель этого этапа связать планирование на карте непосредственно с разработкой фичи.&lt;/li>
&lt;/ol>
&lt;h3 id="словарь-терминов">Словарь терминов&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>КАРТА ПОЛЬЗОВАТЕЛЬСКИХ ИСТОРИЙ&lt;/strong> - она же User Story Mapping; метод визуального описания и планирования задач.&lt;/li>
&lt;li>&lt;strong>ПОЛЬЗОВАТЕЛЬСКАЯ ИСТОРИЯ&lt;/strong> - она же User Story; это способ описания взаимодействия пользователя с software системой в формате
нарративного повествования.&lt;/li>
&lt;li>&lt;strong>КАРКАС&lt;/strong> - он же Backbone; основной набор шагов &lt;strong>ПОЛЬЗОВАТЕЛЬСКОЙ ИСТОРИИ&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>АКТИВНОСТИ&lt;/strong> - это группа задач, имеющих схожие цели.&lt;/li>
&lt;/ul>
&lt;h3 id="дополнительные-материалы">Дополнительные материалы&lt;/h3>
&lt;ul>
&lt;li>[1] &lt;a href="https://www.jpattonassociates.com/wp-content/uploads/2015/03/story_mapping.pdf">https://www.jpattonassociates.com/wp-content/uploads/2015/03/story_mapping.pdf&lt;/a> Отличный pdf документ-памятка по рассматриваему сегодня методу&lt;/li>
&lt;li>[2] &lt;a href="https://www.ozon.ru/product/polzovatelskie-istorii-iskusstvo-gibkoy-razrabotki-po-patton-dzheff-218989010/?utm_campaign=productpage_link&amp;amp;utm_medium=share_button&amp;amp;utm_source=smm">Книга «Пользовательские истории. Искусство гибкой разработки ПО» Паттон Джефф – купить книгу ISBN 978-5-496-02931-5 с быстрой доставкой в интернет-магазине OZON&lt;/a>&lt;/li>
&lt;/ul></content></item></channel></rss>